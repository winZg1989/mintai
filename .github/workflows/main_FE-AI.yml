name: Build and deploy Python app to Azure Web App - FE-AI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create virtual environment
        run: python -m venv venv
      
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
          
      - name: Create deployment configuration
        run: |
          # 创建部署配置文件
          echo '[config]' > .deployment
          echo 'SCM_COMMAND_IDLE_TIMEOUT = 1800' >> .deployment
          echo 'SCM_LOGSTREAM_TIMEOUT = 1800' >> .deployment
          
          # 创建启动文件
          echo 'python -m gunicorn app:app -b 0.0.0.0:$PORT --workers 2 --threads 4 --timeout 60' > startup.txt

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Clean up build files
        run: |
          rm -rf venv
          rm -rf __pycache__
          find . -name "*.pyc" -delete
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_643FD801DFBB43E4AC6CB59067ABDA62 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FC189ED222754FAEAA376A8B92C674D7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4911353947E4413DBDED940179484F62 }}

      - name: 'Deploy to Azure Web App using ZIP Deploy'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'FE-AI'
          slot-name: 'Production'
          package: .
          # 使用 ZIP 部署而不是 OneDeploy
          deploy-to: 'slot'